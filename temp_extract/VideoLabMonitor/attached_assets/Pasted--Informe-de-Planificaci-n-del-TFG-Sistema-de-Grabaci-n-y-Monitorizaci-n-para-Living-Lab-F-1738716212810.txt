### **Informe de Planificación del TFG: Sistema de Grabación y Monitorización para Living Lab**

**Fecha de Entrega: 31 de enero de 2025**

**Desarrollador: Paulino Bermúdez**

---

### **Resumen Ejecutivo**

El proyecto tiene como objetivo desarrollar un sistema de grabación y monitorización de video adaptado a un **Living Lab** para la UCLM y su grupo de investigación. Este sistema permitirá gestionar y monitorizar entornos de grabación con sujetos para investigaciones, brindando soluciones tanto de **captura de video** como de **monitorización de sensores** en tiempo real. El enfoque se basará en un sistema **containerizado** utilizando **microservicios** y se aprovecharán herramientas de **DevSecOps** para facilitar la integración continua, la seguridad y la escalabilidad del sistema, con especial énfasis en la facilidad de uso para los investigadores.

---

### **Objetivos del TFG**

1. **Desarrollar un sistema de captura y procesamiento de video en tiempo real** que permita realizar grabaciones para investigaciones con sujetos en el Living Lab, integrando capacidades de **streaming** y **almacenamiento eficiente**.
2. **Implementar un sistema de monitorización de sensores IoT** (Zigbee), que permita controlar el estado de los entornos de grabación (puertas, ventanas, cajones) y gestionar alertas basadas en eventos de los sensores.
3. **Crear una infraestructura de monitorización y logging centralizada** para gestionar el rendimiento del sistema, usando herramientas como **Prometheus**, **Grafana** y **ELK Stack**.
4. **Automatizar la integración continua y el despliegue de la infraestructura**, utilizando **Docker**, **k3s**, y **GitLab CI/CD** para mantener el sistema escalable y confiable.

---

### **Plan de Implementación (01/02/2025 - 01/03/2025)**

#### **Semana 1 (02/02/2025 - 08/02/2025): Desarrollo del MVP**

- **Objetivo**: Establecer la infraestructura base y los microservicios principales para la grabación y monitorización.
- **Tareas**:
    - **Docker Compose**: Configurar la infraestructura con **Docker Compose** para los microservicios de **captura de video** y **monitorización de sensores**.
    - **Pipeline CI/CD**: Crear el pipeline básico de **CI/CD** en **GitLab** para realizar pruebas unitarias y asegurar la calidad del código.
    - **Sistema de Captura de Video**: Desarrollar el microservicio de **captura y streaming de video**, utilizando tecnologías como **WebRTC** o **RTSP**.
    - **Sistema de Monitorización de Sensores**: Configurar los sensores IoT (Zigbee) a través de **zigbee2mqtt** y desarrollar el microservicio para gestionar las alertas.

#### **Semana 2 (09/02/2025 - 15/02/2025): Integración de K3s y Escalabilidad**

- **Objetivo**: Integrar el sistema de microservicios en un entorno de orquestación **k3s** para facilitar el escalado y la gestión.
- **Tareas**:
    - **Migración a k3s**: Desplegar **k3s** para orquestar los microservicios y proporcionar un entorno ligero y escalable.
    - **Optimización del Sistema de Grabación**: Refinar el microservicio de video para asegurar la **baja latencia** en la transmisión y optimizar el uso de recursos.
    - **Escalabilidad**: Probar el sistema con múltiples instancias para verificar la capacidad de manejo de carga.

#### **Semana 3 (16/02/2025 - 22/02/2025): Implementación de Monitorización Avanzada y Logging**

- **Objetivo**: Desplegar herramientas de monitorización avanzada para medir el rendimiento y facilitar la resolución de problemas en tiempo real.
- **Tareas**:
    - **Prometheus y Grafana**: Implementar la integración de **Prometheus** y **Grafana** para capturar métricas de los microservicios y visualizarlas en un **dashboard**.
    - **ELK Stack**: Integrar **Elasticsearch**, **Logstash**, y **Kibana** para centralizar los logs y crear alertas avanzadas.
    - **Alertas y Notificaciones**: Configurar alertas de **Prometheus** y **Grafana** para monitorear el rendimiento y posibles fallos del sistema.

#### **Semana 4 (23/02/2025 - 29/02/2025): Optimización de Infraestructura y Documentación**

- **Objetivo**: Optimizar el sistema para su uso en producción y preparar la documentación final.
- **Tareas**:
    - **Optimización de Recursos**: Realizar pruebas de rendimiento, optimizando el uso de **CPU**, **memoria** y **almacenamiento**.
    - **Pruebas de Carga y Stress**: Realizar **pruebas de carga** para validar la capacidad de escalado del sistema y la estabilidad bajo condiciones extremas.
    - **Documentación Técnica**: Redactar la **documentación técnica** del proyecto, incluyendo diagramas de arquitectura, instrucciones de instalación y uso, y procedimientos de mantenimiento.

---

### **Entregables Finales**

1. **Sistema de Grabación y Monitorización Funcional**: Microservicios para captura de video en tiempo real y gestión de sensores IoT (Zigbee).
2. **Sistema de Monitorización Avanzada** con **Prometheus**, **Grafana** y **ELK Stack** para la gestión de métricas y logs.
3. **Pipeline CI/CD** automatizado en **GitLab**, con pruebas unitarias, análisis de seguridad y despliegue continuo.
4. **Documentación Completa** que explique la infraestructura, los procesos de configuración y el uso del sistema.

---

### **Próximos Pasos Inmediatos**

1. **Preparación del Entorno de Desarrollo**:
    
    - Configuración de **Docker Compose** en las máquinas virtuales.
    - Instalación de **GitLab** para gestionar el código y el pipeline.
    - Instalación de **Prometheus** y **Grafana** para empezar con la monitorización de los microservicios.
2. **Estructura Inicial del Repositorio**:
    
    - Crear la estructura básica del repositorio y comenzar a añadir los primeros servicios (video y sensores).

---

### **Conclusión**

Este plan proporciona un enfoque claro y alcanzable para desarrollar un sistema robusto de grabación y monitorización en un **Living Lab**, alineado con las necesidades tanto de tu tutora para las investigaciones de los sujetos como de tu mentor, quien valorará la calidad técnica y la escalabilidad del sistema. Al enfocarnos en una solución **containerizada** con un pipeline **DevSecOps** eficiente y escalable, se aseguran tanto la facilidad de integración como la seguridad y el rendimiento del sistema.

---

**Atentamente,**

**Paulino Bermúdez**
